{"changed":false,"filter":false,"title":"UserController.php","tooltip":"/app/Http/Controllers/UserController.php","value":"<?php\n\nnamespace App\\Http\\Controllers;\nuse Session;\nuse \\Illuminate\\Http\\Request;\nuse \\Illuminate\\Support\\Facades\\Auth;\nuse App\\User;\nuse DB;\nclass UserController extends Controller\n{\n  \n    public function getLogin()\n    {\nreturn view('login');\n    }\n     public function getSignup()\n    {\nreturn view('signup');\n    }\n     public function getLogout()\n    {\n     Session::flush();\n        Auth::logout();\n        \n        return redirect() -> route('home2');\n    }\n  \n  \n   public function postLogin(Request $request)\n   {\n        $this ->validate($request,['username' => 'required',\n        'password' => 'required']);\n        \n        if(!Auth::attempt(['username' => $request['username'],'password' => $request['password'] ])){\n            return redirect()->back()->with(['fail' => 'Could not log you in ']);\n        }\n        \n        \n        Session::put('username',$request['username']);\n         Session::put('email',$request['email']);\n         \n        $user = DB::table('users')->where('username',$request['username'])->first();\n        $usertype = (int)$user->type;\n        Session::put('usertype',$usertype);\n        \n          $value =(int)Session::get('usertype');\n          if($value==0)\n           {\n            return redirect()->route('adminhome');\n           }\n        \n       //return redirect() -> route('home')->with(['username' => $request['username']]);\n       return redirect() -> route('home');\n   }\n   \n     public function signup(Request $request)\n   {\n        $this ->validate($request,['username' => 'required',\n        'password' => 'Required|AlphaNum|Between:4,8',\n        'repassword' => 'Required|AlphaNum|Between:4,8',\n        'fullname' => 'required']);\n        $username = $request['username'];\n        $password =  bcrypt($request['password']);\n        $repassword =  bcrypt($request['repassword']);\n        $email = $request['email'];\n       $fullname = $request['fullname'];\n        \n         $user = DB::table('users')->where('email',$email)->first();\n         if($user)\n         {\n            return redirect()->back()->with(['fail' => 'Email already registered']);\n         }\n         \n         if($password != $password)\n         {\n          return redirect()->back()->with(['fail' => 'Password and rewrite password does not match']);\n         }\n        // $userid = $user->email;\n         \n       \n        \n       DB::table('users') ->insert(['username' =>$username,'password'=>$password,'email' =>$email,'fullname' => $fullname,'type' => 1 ]);\n       //return redirect() -> route('home')->with(['username' => $request['username']]);\n       return redirect() -> route('user.login');\n   }\n   \n    public function editSave(Request $request)\n   {\n        $this ->validate($request,['fullname' => 'required',\n        'address' => 'required',\n        'phone' => 'required']);\n        \n        $user = DB::table('users')->where('id',$request['id'])->update(array('fullName'=>$request['fullname'],'address'=>$request['address'],'email'=>$request['email'],'phone'=>$request['phone']));\n       // $user = new User();\n    //    $user->fullName = \n        \n        \n       // Session::put('username',$request['username']);\n       //return redirect() -> route('home')->with(['username' => $request['username']]);\n       //return redirect() -> route('home');\n         if(!Auth::check())\n       {\n            return redirect()->route('user.login');\n        }\n         $value = Session::get('username');\n         $user = User::all() ->where('username',$value);\n        \n        //  return view('home',['username' => $request['username'],'books' =>$books,'items' => $items]);\n        //return view('actions.account',['user' => $user])->with(['success'=>'Account Edited']);\n        return  redirect()->back()->with(['success'=>'Account Edited']);\n   }\n   \n    public function getAccount()\n    {\n         if(!Auth::check())\n       {\n            return redirect()->route('user.login');\n        }\n         $value = Session::get('username');\n         $user = User::all() ->where('username',$value);\n      //  foreach ($user as $value) {\n    //        $uid = (int)$user->id;\n     //    }\n      //   $user->id;\n         \n       //  $order =DB::table('orders')\n        //            ->join('items','items.id','=','orders.item_id')\n         //           ->join('user','items.user_id','=','users.id')\n          //          ->join('user','users.id','=',$uid)\n        //            ->get();\n        \n        \n        \n        //  return view('home',['username' => $request['username'],'books' =>$books,'items' => $items]);\n        return view('actions.account',['user' => $user]);\n    }\n     public function getCart()\n    {\n        if(!Auth::check())\n       {\n            return redirect()->route('user.login');\n        }\n      $value = Session::get('username');\n       $user = DB::table('users')->where('username',$value)->first();\n       $userid = (int)$user->id;\n       \n       //SELECT * FROM `orders` join items on orders.item_id = items.id join books on items.books_id =books.id \n//where orders.user_id = 1\n      // <div class=\"booksChecked\" itemid =\"'+item+'\" quantity=\"'+quantity+'\" id=\"'+id+'\" title=\"'+bookTitle+'\" quantity=\"'+quantity+'\" type=\"'+type+'\" price=\"'+price+'\"  need=\"'+need+'\">'+bookTitle+'<button id=\"db\">Delete</button></div></li>';\n//      \n       \n         $order = DB::table('orders')\n         ->join('items','items.id','=','orders.item_id')\n         ->join('books','books.id','=','items.books_id')\n         ->where('orders.user_id',$userid)\n         ->where('orders.status',0)\n         ->select('items.id as item_id','orders.quantity as need','orders.id as id','items.quantity as quantity','books.bookname as bookname','items.type as type','items.price as price','books.titleimage as titleimage')\n         ->paginate(10);\n        \n        \n        //  return view('home',['username' => $request['username'],'books' =>$books,'items' => $items]);\n        return view('actions.cart',['order' => $order]);\n    }\n     public function purchaseHistory()\n    {\n         $value = Session::get('username');\n       $user = DB::table('users')->where('username',$value)->first();\n       $userid = (int)$user->id;\n       \n         $order = DB::table('orders')\n         ->join('items','items.id','=','orders.item_id')\n         ->join('books','books.id','=','items.books_id')\n         ->where('orders.user_id',$userid)\n         ->where('orders.status',1)\n         ->select('items.id as item_id','orders.order_date as order_date','orders.quantity as need','orders.id as id','items.quantity as quantity','books.bookname as bookname','items.type as type','items.price as price','books.book_status as book_status','books.titleimage as titleimage')\n         ->get();\n        \n        \n        //  return view('home',['username' => $request['username'],'books' =>$books,'items' => $items]);\n        return view('list',['order' => $order]);\n        //\n       \n    }\n}","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":2277,"scrollleft":0,"selection":{"start":{"row":109,"column":34},"end":{"row":109,"column":34},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":161,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1461939495000}